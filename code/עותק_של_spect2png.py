# -*- coding: utf-8 -*-
"""עותק של spect2png.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vsGO19h3AxJLzDq9QohP5kPpkDqj1FLK
"""

# Commented out IPython magic to ensure Python compatibility.
from google.colab import drive
drive.mount('/content/drive')
# %cd /content/drive/Shareddrives/TEST_RECORDINGS/Final_Project/E:/

from __future__ import division, print_function
from os import listdir
from os.path import isfile, join
import numpy as np
import matplotlib.pyplot as plt
import scipy.io.wavfile as wav
import librosa
import librosa.display

'''
def wav_to_spectrogram(audio_path, save_path, spectrogram_dimensions=(128, 128), noverlap=16, cmap='gray_r'):
    """ Creates a spectrogram of a wav file.
​
    :param audio_path: path of wav file
    :param save_path:  path of spectrogram to save
    :param spectrogram_dimensions: number of pixels the spectrogram should be. Defaults (64,64)
    :param noverlap: See http://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.spectrogram.html
    :param cmap: the color scheme to use for the spectrogram. Defaults to 'gray_r'
    :return:
    """


    sr = 250000
    rec, sr = librosa.load(audio_path, sr=sr)
    D1 = np.abs(librosa.stft(rec, n_fft=2048, hop_length=128, win_length=512, window='hamming'))
    fig = plt.figure()
    ax = plt.Axes(fig, [0., 0., 1., 1.])
    ax.set_axis_off()
    fig.add_axes(ax)
    ax.pcolormesh(20*np.log10(D1))
    fig.savefig(save_path)


def dir_to_spectrogram(audio_dir, spectrogram_dir, spectrogram_dimensions=(256, 256), noverlap=1920, cmap='gray_r'):
    """ Creates spectrograms of all the audio files in a dir

    :param audio_dir: path of directory with audio files
    :param spectrogram_dir: path to save spectrograms
    :param spectrogram_dimensions: tuple specifying the dimensions in pixes of the created spectrogram. default:(64,64)
    :param noverlap: See http://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.spectrogram.html
    :param cmap: the color scheme to use for the spectrogram. Defaults to 'gray_r'
    :return:
    """
    cmap = 'viridis'
    file_names = [f for f in listdir(audio_dir)]

    for file_name in file_names:
        print(file_name)
        audio_path = audio_dir + file_name
        spectogram_path = spectrogram_dir + file_name + '.png'
        wav_to_spectrogram(audio_path, spectogram_path, spectrogram_dimensions=spectrogram_dimensions, noverlap=noverlap, cmap=cmap)

"""
if __name__ == '__main__':
    audio_dir = "/content/drive/Shareddrives/TEST_RECORDINGS/Final_Project/E:/Data_United_Syllables_new/"
    spectrogram_dir = "/content/drive/Shareddrives/TEST_RECORDINGS/Final_Project/E:/Spect_png/"
    dir_to_spectrogram(audio_dir, spectrogram_dir)
    """
'''

'''
audio_dir = '/content/drive/Shareddrives/TEST_RECORDINGS/Final_Project/E:/Data_United_Syllables_new/'
spectrogram_dir = '/content/drive/Shareddrives/TEST_RECORDINGS/Final_Project/E:/Spect_png/'
dir_to_spectrogram(audio_dir, spectrogram_dir)
'''

'''
path1 = '/content/drive/Shareddrives/TEST_RECORDINGS/Final_Project/E:/Data_United_Syllables_new/syllable200'
sr = 250000
rec1, sr = librosa.load(path1, sr=sr)
D1 = np.abs(librosa.stft(rec1, n_fft=2048, hop_length=128, win_length=512, window='hamming'))
fig = plt.figure()
ax = plt.Axes(fig, [0., 0., 1., 1.])
ax.set_axis_off()
fig.add_axes(ax)
ax.pcolormesh(20*np.log10(D1))
#fig.savefig('/content/drive/Shareddrives/TEST_RECORDINGS/Final_Project/E:/test_wav/syllable0.png', bbox_inches="tight", pad_inches=0)
'''

# Commented out IPython magic to ensure Python compatibility.
Data_RBG = []
Data_united = np.load('Data_united_128.npy',allow_pickle = True)
for i in range(len(Data_united)):
  fig = plt.figure()
  ax = plt.Axes(fig, [0., 0., 1., 1.])
  ax.set_axis_off()
  fig.add_axes(ax)
  ax.pcolormesh(20*np.log10(Data_united[i]))
  fig.savefig('/content/drive/Shareddrives/TEST_RECORDINGS/Final_Project/E:/Spect_png/syllable{}.png'.format(i), bbox_inches="tight", pad_inches=0)
  Data_RBG.append(fig)
  plt.close()
plt.show(Data_RBG[0])
# %cd /content/drive/Shareddrives/TEST_RECORDINGS/Final_Project/E:/
np.save('Data_united_RBG', Data_RBG)