# -*- coding: utf-8 -*-
"""עותק של DATA_CREATION_data_united.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y6op2TRPKWQsF4JTlddHy-_FRlfO3wWo
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import os
import xlrd
import math
import numpy as np
import matplotlib.pyplot as plt
import scipy
import librosa
import librosa.display
import json

data_table = pd.read_excel("goldStandarts_2020_united.xlsx")
print(data_table)

#data_table = pd.read_excel("gold_standart_test.xlsx")
#print(data_table)
#mother = data_table.iloc[0:7,2]
#print(mother)


data_table = xlrd.open_workbook('goldStandarts_2020_united.xlsx').sheet_by_index(0)
all_path = data_table.col_values(0, 0)
#mother = data_table.col_values(2, 1)
#name = data_table.col_values(4, 1)
syllable = data_table.col_values(8, 0)
rec_name = data_table.col_values(1, 0)
start = data_table.col_values(2, 0)
finish = data_table.col_values(3, 0)

for i in range(len(all_path)):
  all_path[i] = all_path[i].replace("\\", "/")

time_diff = []
start_arr = np.array(start) #converting to array
finish_arr = np.array(finish)
time_diff = np.subtract(finish_arr, start_arr) #calculating each syllable length
#max_time = max(time_diff) #finding maximum syllable length
max_time = 0.25
print(max_time)
#print(np.where(time_diff == 1.0896))

from scipy.io.wavfile import write
path_silence = '/content/drive/Recordings_ella_ayelet/total_data/8001P/8136G/T0000046.WAV'
sr=250000
rec_silence, sr = librosa.load(path_silence, sr=sr)
rec_silence = rec_silence[0:round((0.13)*sr)]
for i in range(len(all_path)):
  path = '/content/drive/{}/{}.wav'.format(all_path[i], rec_name[i]) #find path of each recording
  path = path.replace("\\", "/")
  if not os.path.exists('{}'.format(path)):
    path = '/content/drive/{}/{}.WAV'.format(all_path[i], rec_name[i])
    if not os.path.exists('{}'.format(path)):
      continue
  if time_diff[i] >= max_time:
    continue
  rec, rate = librosa.load(path, sr) #opens recordings and sample rate, add sample rate of USVs
  temp = (max_time - time_diff[i])/2
  if (start[i]-temp) < 0:
    rec_silence_temp = rec_silence[0:round((abs(start[i]-temp)*rate)+1)]
    rec = np.append(rec_silence_temp, rec)
    start[i] = start[i] + abs(start[i]-temp)
    finish[i] = finish[i] + abs(start[i]-temp)
  trimmed = rec[round((start[i]-temp)*rate):round((finish[i]+temp)*rate)] #trimming the syllables according to start and fin poitns from excel, and normalizing length to max syllable
#  write('syllable{}'.format(i), rate, trimed) #saving syllabels as wav files

print(max_time)